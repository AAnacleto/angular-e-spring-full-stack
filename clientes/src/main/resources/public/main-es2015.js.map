{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.service.ts","./src/app/clientes.service.ts","./src/app/clientes/cliente.ts","./src/app/clientes/clientes-form/clientes-form.component.ts","./src/app/clientes/clientes-form/clientes-form.component.html","./src/app/clientes/clientes-lista/clientes-lista.component.ts","./src/app/clientes/clientes-lista/clientes-lista.component.html","./src/app/clientes/clientes-routing.module.ts","./src/app/clientes/clientes.module.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/layout/layout.component.ts","./src/app/layout/layout.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/usuario.ts","./src/app/servico-prestado.service.ts","./src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.ts","./src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.html","./src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.ts","./src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.html","./src/app/servico-prestado/servico-prestado-routing.module.ts","./src/app/servico-prestado/servico-prestado.module.ts","./src/app/servico-prestado/servicoPrestado.ts","./src/app/template/navbar/navbar.component.ts","./src/app/template/navbar/navbar.component.html","./src/app/template/sidebar/sidebar.component.ts","./src/app/template/sidebar/sidebar.component.html","./src/app/template/template.module.ts","./src/app/token.interceptor.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: '', component: LayoutComponent, children: [\r\n    { path : 'home', component: HomeComponent , canActivate: [AuthGuard]},\r\n    { path : '', redirectTo : '/home', pathMatch : 'full'}\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'clientes-app';\r\n\r\n \r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { TemplateModule } from './template/template.module';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { ClientesModule } from './clientes/clientes.module';\r\nimport { ClientesService } from './clientes.service'\r\nimport { ServicoPrestadoModule } from './servico-prestado/servico-prestado.module'\r\nimport { ServicoPrestadoService } from './servico-prestado.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LayoutComponent } from './layout/layout.component'\r\nimport { AuthService } from './auth.service';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { JwtModule, JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    LayoutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    TemplateModule,\r\n    ClientesModule,\r\n    ServicoPrestadoModule\r\n  ],\r\n  providers: [\r\n    ClientesService,\r\n    ServicoPrestadoService,\r\n    AuthService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      \n    const authenticated = this.authService.isAuthenticated();\n    if(authenticated){\n      return true;\n    }else{\n      this.router.navigate(['/login'])\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Usuario } from './login/usuario';\nimport { Observable } from 'rxjs';\n\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiURL: string = environment.apiURLBase + \"/api/usuarios\"\n  tokenURL: string = environment.apiURLBase + environment.obterTokenUrl\n  clientID: string = environment.clientId;\n  clientSecret: string = environment.clientSecret;\n  jwtHelper: JwtHelperService = new JwtHelperService();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  obterToken(){\n    const tokenString = localStorage.getItem('access_token')\n    if(tokenString){\n      const token = JSON.parse(tokenString).access_token\n      return token;\n    }\n    return null;\n  }\n\n  encerrarSessao(){\n    localStorage.removeItem('access_token');\n  }\n\n  public isAuthenticated() : boolean {\n    const token = this.obterToken();\n    if(token){\n      const is = this.jwtHelper.isTokenExpired(token);\n      return !is;\n    }\n    return false;\n  }\n\n  getUsuarioLogado(){\n    const tokenString = localStorage.getItem('access_token')\n    if(tokenString){\n      return JSON.parse(tokenString);\n    }\n  }\n\n  salvar(usuario: Usuario) : Observable<any> {\n    return this.http.post<any>(this.apiURL, usuario);\n  }\n\n  tentarLogar( username: string, password: string ) : Observable<any> {\n    const params = new HttpParams()\n                        .set('username', username)\n                        .set('password', password)\n                        .set('grant_type', 'password')\n\n    const headers = {\n      'Authorization': 'Basic ' + btoa(`${this.clientID}:${this.clientSecret}`),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n    \n    return this.http.post( this.tokenURL, params.toString(), { headers });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\nimport { Cliente } from './clientes/cliente';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  apiURL: string = environment.apiURLBase + '/api/clientes';\n\n  constructor( private http: HttpClient ) {}\n\n  salvar( cliente: Cliente ) : Observable<Cliente> {\n    return this.http.post<Cliente>( `${this.apiURL}` , cliente);\n  }\n\n  atualizar( cliente: Cliente ) : Observable<any> {\n    return this.http.put<Cliente>(`${this.apiURL}/${cliente.id}` , cliente);\n  }\n\n  getClientes() : Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(this.apiURL);\n  }\n  \n  getClienteById(id: number) : Observable<Cliente> {\n    return this.http.get<any>(`${this.apiURL}/${id}`);\n  }\n\n  deletar(cliente: Cliente) : Observable<any> {\n    return this.http.delete<any>(`${this.apiURL}/${cliente.id}`);\n  }\n\n}\n","export class Cliente {\r\n    id: number;\r\n    nome: string;\r\n    cpf: string;\r\n    dataCadastro: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\nimport { Cliente } from '../cliente'\nimport { ClientesService } from '../../clientes.service'\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-clientes-form',\n  templateUrl: './clientes-form.component.html',\n  styleUrls: ['./clientes-form.component.css']\n})\nexport class ClientesFormComponent implements OnInit {\n\n  cliente: Cliente;\n  success: boolean = false;\n  errors: String[];\n  id: number;\n\n  constructor( \n      private service: ClientesService ,\n      private router: Router,\n      private activatedRoute : ActivatedRoute\n      ) {\n    this.cliente = new Cliente();\n  }\n\n  ngOnInit(): void {\n    let params : Observable<Params> = this.activatedRoute.params\n    params.subscribe( urlParams => {\n        this.id = urlParams['id'];\n        if(this.id){\n          this.service\n            .getClienteById(this.id)\n            .subscribe( \n              response => this.cliente = response ,\n              errorResponse => this.cliente = new Cliente()\n            )\n        }\n    })\n  }\n\n  voltarParaListagem(){\n    this.router.navigate(['/clientes/lista'])\n  }\n\n  onSubmit(){\n    if(this.id){\n\n      this.service\n        .atualizar(this.cliente)\n        .subscribe(response => {\n            this.success = true;\n            this.errors = null;\n        }, errorResponse => {\n          this.errors = ['Erro ao atualizar o cliente.']\n        })\n\n\n    }else{\n\n      this.service\n        .salvar(this.cliente)\n          .subscribe( response => {\n            this.success = true;\n            this.errors = null;\n            this.cliente = response;\n          } , errorResponse => {\n            this.success = false;\n            this.errors = errorResponse.error.errors;\n          })\n\n    }\n\n  }\n\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">{{ cliente.id ? 'Edição' : 'Cadastro' }}</li>\n</ol>\n<div class=\"container\">\n    <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" >\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\n                    Cliente salvo/atualizado com sucesso!    \n                </div>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\n                    {{ erro  }}    \n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"cliente.id\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>ID:</label>\n                    <input type=\"text\" [ngModel]=\"cliente.id\" name=\"id\" class=\"form-control\" disabled=\"true\" />\n                </div>\n            </div>\n\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data Cadastro:</label>\n                    <input type=\"text\" class=\"form-control\" name=\"dataCadastro\"\n                           [ngModel]=\"cliente.dataCadastro\" disabled=\"true\"  />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Nome: *</label>\n                    <input type=\"text\" class=\"form-control\" \n                           [(ngModel)]=\"cliente.nome\" name=\"nome\"   />\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>CPF: *</label>\n                    <input type=\"text\" class=\"form-control\" \n                            [(ngModel)]=\"cliente.cpf\" name=\"cpf\"  />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"!cliente.id\">\n                    <i class=\"fa fa-save\" ></i> Salvar\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"cliente.id\">\n                    <i class=\"fa fa-sync-alt\" ></i> Atualizar\n                </button>\n\n                <button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"voltarParaListagem()\">\n                    <i class=\"fa fa-arrow-alt-circle-left\" ></i> Voltar\n                </button>\n            </div>\n     \n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { Cliente } from '../cliente';\r\nimport { ClientesService } from '../../clientes.service'\r\n\r\n@Component({\r\n  selector: 'app-clientes-lista',\r\n  templateUrl: './clientes-lista.component.html',\r\n  styleUrls: ['./clientes-lista.component.css']\r\n})\r\nexport class ClientesListaComponent implements OnInit {\r\n\r\n  clientes: Cliente[] = [];\r\n  clienteSelecionado: Cliente;\r\n  mensagemSucesso: string;\r\n  mensagemErro: string;\r\n\r\n  constructor(\r\n    private service: ClientesService, \r\n    private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.service\r\n      .getClientes()\r\n      .subscribe( resposta => this.clientes = resposta );\r\n  }\r\n\r\n  novoCadastro(){\r\n    this.router.navigate(['/clientes/form'])\r\n  }\r\n\r\n  preparaDelecao(cliente: Cliente){\r\n    this.clienteSelecionado = cliente;\r\n  }\r\n\r\n  deletarCliente(){\r\n    this.service\r\n      .deletar(this.clienteSelecionado)\r\n      .subscribe( \r\n        response => {\r\n          this.mensagemSucesso = 'Cliente deletado com sucesso!'\r\n          this.ngOnInit();\r\n        },\r\n        erro => this.mensagemErro = 'Ocorreu um erro ao deletar o cliente.'  \r\n      )\r\n  }\r\n}\r\n","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">Consulta</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n\r\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"mensagemSucesso\">\r\n                {{ mensagemSucesso }}  \r\n            </div>\r\n\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"mensagemErro\">\r\n                {{ mensagemErro  }}    \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <button class=\"btn btn-warning\" (click)=\"novoCadastro()\" >\r\n                <i class=\"fa fa-plus\"></i> Novo\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <table class=\"table table-condensed table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nome</th>\r\n                        <th>CPF</th>\r\n                        <th>Data Cadastro</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let cliente of clientes\">\r\n                        <td>{{ cliente.id }}</td>\r\n                        <td>{{ cliente.nome }}</td>\r\n                        <td>{{ cliente.cpf }}</td>\r\n                        <td>{{ cliente.dataCadastro }}</td>\r\n                        <td>\r\n                            <button class=\"btn btn-primary\" \r\n                                    routerLink=\"/clientes/form/{{ cliente.id }}\">\r\n                                <i class=\"fa fa-edit\"></i>\r\n                            </button>\r\n\r\n                            <button class=\"btn btn-danger\" (click)=\"preparaDelecao(cliente)\" \r\n                                    data-toggle=\"modal\" data-target=\"#modalDelecao\">\r\n                                <i class=\"fa fa-trash\"></i>\r\n                            </button>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"modalDelecao\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4>Confirmação</h4>\r\n                </div>\r\n\r\n                <div class=\"modal-body\" *ngIf=\"clienteSelecionado\">\r\n                    Confirma a deleção do(a) Cliente {{ clienteSelecionado.nome }}?\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button class=\"btn btn-success\" (click)=\"deletarCliente()\"  \r\n                            data-dismiss=\"modal\">Confirmar</button>\r\n                    <button class=\"btn btn-default\" data-dismiss=\"modal\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component'\r\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path : 'clientes' , canActivate: [AuthGuard], component: LayoutComponent, children: [\r\n    \r\n    { path: 'form' , component: ClientesFormComponent },\r\n    { path: 'form/:id' , component: ClientesFormComponent },\r\n    { path: 'lista', component: ClientesListaComponent },\r\n    { path: '', redirectTo : '/clientes/lista', pathMatch: 'full' }\r\n\r\n  ]}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\n\nimport { ClientesRoutingModule } from './clientes-routing.module';\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\n\n@NgModule({\n  declarations: [\n    ClientesFormComponent,\n    ClientesListaComponent\n  ],\n  imports: [\n    CommonModule,\n    ClientesRoutingModule,\n    FormsModule\n  ], exports: [\n    ClientesFormComponent,\n    ClientesListaComponent\n  ]\n})\nexport class ClientesModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-4\">Home</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Bem vindo</li>\n</ol>","import { Component, AfterViewInit } from '@angular/core';\n\nimport jQuery from 'jquery'\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor() { }\n\n  ngAfterViewInit(){\n    (function($) {\n        \"use strict\";\n    \n        // Add active state to sidbar nav links\n        var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\n            $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function() {\n                if (this.href === path) {\n                    $(this).addClass(\"active\");\n                }\n            });\n    \n        // Toggle the side navigation\n        $(\"#sidebarToggle\").on(\"click\", function(e) {\n            e.preventDefault();\n            $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n        });\n    })(jQuery);\n  }\n\n}\n","<app-navbar></app-navbar>\n<div id=\"layoutSidenav\">\n  <app-sidebar></app-sidebar> \n  <div id=\"layoutSidenav_content\">\n    <main>\n      <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n      </div>\n      <footer class=\"py-4 bg-light mt-auto\">\n        <div class=\"container-fluid\">\n            <div class=\"d-flex align-items-center justify-content-between small\">\n                <div class=\"text-muted\">Copyright &copy; Meus Clientes 2020</div>\n                <div>\n                    <a href=\"#\">Privacy Policy</a>\n                    &middot;\n                    <a href=\"#\">Terms &amp; Conditions</a>\n                </div>\n            </div>\n        </div>\n    </footer>\n    </main>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from './usuario'\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  {\n\n  username: string;\n  password: string;\n  cadastrando: boolean;\n  mensagemSucesso: string;\n  errors: String[];\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  onSubmit(){\n    this.authService\n          .tentarLogar(this.username, this.password)\n          .subscribe(response => {\n            const access_token = JSON.stringify(response);\n            localStorage.setItem('access_token', access_token)\n            this.router.navigate(['/home'])\n          }, errorResponse => {\n            this.errors = ['Usuário e/ou senha incorreto(s).']\n          })\n\n  }\n\n  preparaCadastrar(event){\n    event.preventDefault();\n    this.cadastrando = true;\n  }\n\n  cancelaCadastro(){\n    this.cadastrando = false;\n  }\n\n  cadastrar(){\n    const usuario: Usuario = new Usuario();\n    usuario.username = this.username;\n    usuario.password = this.password;\n    this.authService\n        .salvar(usuario)\n        .subscribe( response => {\n            this.mensagemSucesso = \"Cadastro realizado com sucesso! Efetue o login.\";\n            this.cadastrando = false;\n            this.username = '';\n            this.password = '';\n            this.errors = []\n        }, errorResponse => {\n            this.mensagemSucesso = null;\n            this.errors = errorResponse.error.errors;\n        })\n  }\n\n}\n","<div class=\"bg-primary\" >\n    <div id=\"layoutAuthentication\">\n        <div id=\"layoutAuthentication_content\">\n            <main>\n                <div class=\"container\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-lg-5\">\n                            <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"text-center font-weight-light my-4\">\n                                        {{ cadastrando ? 'Cadastro de Novo Usuário' : 'Entrar' }}\n                                    </h3>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"alert alert-success\" *ngIf=\"mensagemSucesso\">\n                                        {{ mensagemSucesso }}\n                                    </div>\n\n                                    <div class=\"alert alert-danger\" *ngFor=\"let erro of errors\">\n                                    {{ erro }}\n                                    </div>\n\n                                    <form #loginForm=\"ngForm\" (submit)=\"onSubmit();\">\n                                        <div class=\"form-group\">\n                                            <label class=\"small mb-1\">Login</label>\n                                            <input type=\"text\" name=\"username\"\n                                                [(ngModel)]=\"username\" autocomplete=\"off\"\n                                                class=\"form-control py-4\"\n                                                placeholder=\"Digite seu login\" />\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label class=\"small mb-1\">Senha</label>\n                                            <input type=\"password\" name=\"password\"\n                                                [(ngModel)]=\"password\"\n                                                class=\"form-control py-4\"\n                                                placeholder=\"Digite sua Senha\" />\n                                        </div>\n\n                                        <div class=\"form-group align-items-center justify-content-between mt-4 mb-0\">\n                                            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!cadastrando\">\n                                                Enviar\n                                            </button>\n\n                                            <button type=\"button\" class=\"btn btn-success\" \n                                                    (click)=\"cadastrar()\"\n                                                    *ngIf=\"cadastrando\">\n                                                Cadastrar\n                                            </button>\n\n                                            <button type=\"button\" (click)=\"cancelaCadastro()\"\n                                                    class=\"btn btn-danger ml-1\" *ngIf=\"cadastrando\">\n                                                Cancelar\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <div class=\"card-footer text-center\">\n                                    <div class=\"small\">\n                                        <a href=\"#\" (click)=\"preparaCadastrar($event)\" >\n                                            Não possui Usuário? Cadastre-se!\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    </div>\n</div>\n","export class Usuario {\r\n    username: string;\r\n    password: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ServicoPrestado } from './servico-prestado/servicoPrestado';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment'\nimport { ServicoPrestadoBusca } from './servico-prestado/servico-prestado-lista/servicoPrestadoBusca';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoPrestadoService {\n\n  apiURL: string = environment.apiURLBase + \"/api/servicos-prestados\"\n\n  constructor(private http: HttpClient) { }\n\n  salvar(servicoPrestado: ServicoPrestado) : Observable<ServicoPrestado>{\n    return this.http.post<ServicoPrestado>(this.apiURL, servicoPrestado);\n  }\n\n  buscar(nome: string, mes: number) : Observable<ServicoPrestadoBusca[]>{\n\n    const httpParams = new HttpParams()\n      .set(\"nome\", nome)\n      .set(\"mes\", mes ?  mes.toString() : '');\n\n    const url = this.apiURL + \"?\" + httpParams.toString();\n    return this.http.get<any>(url);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Cliente } from '../../clientes/cliente';\nimport { ClientesService } from '../../clientes.service'\nimport { ServicoPrestado } from '../servicoPrestado';\nimport { ServicoPrestadoService } from '../../servico-prestado.service'\n\n@Component({\n  selector: 'app-servico-prestado-form',\n  templateUrl: './servico-prestado-form.component.html',\n  styleUrls: ['./servico-prestado-form.component.css']\n})\nexport class ServicoPrestadoFormComponent implements OnInit {\n\n  clientes: Cliente[] = []\n  servico: ServicoPrestado;\n  success: boolean = false;\n  errors: String[];\n\n  constructor(\n    private clienteService: ClientesService,\n    private service: ServicoPrestadoService\n  ) { \n    this.servico = new ServicoPrestado();\n  }\n\n  ngOnInit(): void {\n    this.clienteService\n      .getClientes()\n      .subscribe( response => this.clientes = response );\n  }\n\n  onSubmit(){\n    this.service\n      .salvar(this.servico)\n      .subscribe( response => {\n        this.success = true;\n        this.errors = null;\n        this.servico = new ServicoPrestado();\n      } , errorResponse => {\n        this.success = false;\n        this.errors = errorResponse.error.errors;\n      })\n  }\n\n}\n","<h1 class=\"mt-4\">Serviço Prestado</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrum-bitem active\">Novo</li>\n</ol>\n<div class=\"container\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit()\" >\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\n                    Serviço Prestado salvo com sucesso!    \n                </div>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\n                    {{ erro  }}    \n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Cliente: </label>\n                    <select class=\"form-control\" \n                            [ngModelOptions]=\"{standalone: true}\"\n                            [(ngModel)]=\"servico.idCliente\">\n                        <option value=\"\">Selecione...</option>\n                        <option *ngFor=\"let cliente of clientes\" \n                                [ngValue]=\"cliente.id\">\n                            {{ cliente.nome }}\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Descrição:</label>\n                    <input class=\"form-control\" \n                            [(ngModel)]=\"servico.descricao\" type=\"text\" \n                            name=\"descricao\" id=\"inputDescricao\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data:</label>\n                    <input class=\"form-control\" \n                            [(ngModel)]=\"servico.data\" type=\"text\" \n                            name=\"data\" id=\"inputData\">\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Preço:</label>\n                    <input class=\"form-control\" \n                            [(ngModel)]=\"servico.preco\" type=\"text\" \n                            name=\"preco\" id=\"inputPreco\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-success\">\n                    <i class=\"fa fa-save\"></i>\n                    Salvar\n                </button>\n\n                <button type=\"button\" routerLink=\"/servicos-prestados/lista\" \n                        class=\"btn btn-danger ml-1\" >\n                    <i class=\"fa fa-arrow-alt-circle-left\" ></i> Voltar\n                </button>\n            </div>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServicoPrestadoBusca } from './servicoPrestadoBusca';\nimport { ServicoPrestadoService } from '../../servico-prestado.service'\n\n@Component({\n  selector: 'app-servico-prestado-lista',\n  templateUrl: './servico-prestado-lista.component.html',\n  styleUrls: ['./servico-prestado-lista.component.css']\n})\nexport class ServicoPrestadoListaComponent implements OnInit {\n\n  nome: string;\n  mes: number;\n  meses: number[];\n  lista: ServicoPrestadoBusca[];\n  message: string;\n\n  constructor(\n    private service: ServicoPrestadoService\n  ) { \n    this.meses = [1,2,3,4,5,6,7,8,9,10,11,12];\n  }\n\n  ngOnInit(): void {\n  }\n\n  consultar(){\n    this.service\n      .buscar(this.nome, this.mes)\n      .subscribe(response => {\n        this.lista = response;\n        if( this.lista.length <= 0 ){\n          this.message = \"Nenhum Registro encontrado.\";\n        }else{\n          this.message = null;\n        }\n      });\n  }\n}\n","<h1 class=\"mt-4\">Serviço Prestado</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrum-bitem active\">Consulta</li>\n</ol>\n<div class=\"container\">\n    <form #consultaForm=\"ngForm\" (submit)=\"consultar()\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <label for=\"inputNome\">Nome Cliente:</label>\n                <input type=\"text\" [(ngModel)]=\"nome\" \n                       name=\"nome\" class=\"form-control\"\n                       id=\"inputNome\">\n            </div>\n\n            <div class=\"col-md-6\">\n                <label for=\"inputMes\">Mês:</label>\n                <select [(ngModel)]=\"mes\" class=\"form-control\" name=\"mes\">\n                    <option value=\"\">Selecione...</option>\n                    <option *ngFor=\"let mes of meses\" [value]=\"mes\">\n                        {{ mes }}\n                    </option>\n                </select>\n            </div>\n        </div>\n\n        <br />\n\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <button type=\"submit\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-search\"></i> Consultar\n                </button>\n\n                <button type=\"button\" \n                        routerLink=\"/servicos-prestados/form\"\n                        class=\"btn btn-warning ml-1\">\n                    <i class=\"fa fa-plus\"></i> Novo\n                </button>\n            </div>\n        </div>\n    </form>\n\n    <br />\n    <div class=\"row\">\n        <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"message\">\n            {{ message }}   \n        </div>\n        <div class=\"col-md-12\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Cliente</th>\n                        <th>Descrição</th>\n                        <th>Preço</th>\n                        <th>Data</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let s of lista\" >\n                        <td>{{ s.cliente.nome }} </td>\n                        <td>{{ s.descricao }} </td>\n                        <td>{{ s.valor }} </td>\n                        <td>{{ s.data }} </td>\n                    </tr>\n                </tbody>\n            </table>\n            \n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\r\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'servicos-prestados', canActivate: [AuthGuard], component: LayoutComponent, children: [\r\n    \r\n    { path: 'form', component: ServicoPrestadoFormComponent },\r\n    { path: 'lista', component: ServicoPrestadoListaComponent },\r\n    { path: '', redirectTo: '/servicos-prestados/lista', pathMatch: 'full' }\r\n\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicoPrestadoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\n\nimport { ServicoPrestadoRoutingModule } from './servico-prestado-routing.module';\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    ServicoPrestadoFormComponent, \n    ServicoPrestadoListaComponent\n  ],\n  imports: [\n    \n    CommonModule,\n    ServicoPrestadoRoutingModule,\n    FormsModule,\n    RouterModule\n\n  ], exports : [\n    ServicoPrestadoFormComponent, \n    ServicoPrestadoListaComponent\n  ]\n})\nexport class ServicoPrestadoModule { }\n","export class ServicoPrestado {\r\n    descricao:string;\r\n    preco:string;\r\n    data:string;\r\n    idCliente:number;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Meus Clientes</a>\r\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" \r\n            id=\"sidebarToggle\" href=\"#\">\r\n        <i class=\"fas fa-bars\"></i>\r\n    </button>            \r\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  usuarioLogado: any;\n  jwtHelper: JwtHelperService = new JwtHelperService();\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const token = this.authService.obterToken();\n    if(token){\n      this.usuarioLogado = this.jwtHelper.decodeToken(token).user_name\n    }\n  }\n\n  logout(){\n    this.authService.encerrarSessao();\n    this.router.navigate(['/login'])\n  }\n\n}\n","<div id=\"layoutSidenav_nav\">\r\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n        <div class=\"sb-sidenav-menu\">\r\n            <div class=\"nav\">\r\n                <div class=\"sb-sidenav-menu-heading\">Sistema</div>\r\n                <a class=\"nav-link\" routerLink=\"/home\">\r\n                    <div class=\"sb-nav-link-icon\">\r\n                        <i class=\"fas fa-tachometer-alt\"></i>\r\n                    </div>\r\n                    Home\r\n                </a>\r\n                <div class=\"sb-sidenav-menu-heading\">Cadastros</div>\r\n                <a class=\"nav-link collapsed\" routerLink=\"/clientes\" \r\n                    data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \r\n                    aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\r\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\r\n                    Clientes\r\n                </a>\r\n\r\n                <a class=\"nav-link collapsed\" routerLink=\"/servicos-prestados\" \r\n                    data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \r\n                    aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\r\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-address-card\"></i></div>\r\n                    Serviços Prestados\r\n                </a>\r\n                <div class=\"sb-sidenav-menu-heading\">Logout</div>\r\n                <a class=\"nav-link collapsed\" (click)=\"logout()\" href=\"#\"\r\n                    data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \r\n                    aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\r\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-sign-out-alt\"></i></div>\r\n                    Sair\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"sb-sidenav-footer\">\r\n            <div class=\"small\">Logado como:</div>\r\n            {{ usuarioLogado }}\r\n        </div>\r\n    </nav>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class TemplateModule { }\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    const tokenString = localStorage.getItem('access_token');\n\n    const url =  request.url;\n\n    if( tokenString && !url.endsWith('/oauth/token') ){\n      const token = JSON.parse(tokenString);\n      const jwt = token.access_token;\n      request = request.clone({\n        setHeaders : {\n          Authorization: 'Bearer ' + jwt\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURLBase: 'http://localhost:8080',\r\n  clientId: 'my-angular-app',\r\n  clientSecret: '@321',\r\n  obterTokenUrl: '/oauth/token'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}