{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth.guard.ts","webpack:///src/app/auth.service.ts","webpack:///src/app/clientes.service.ts","webpack:///src/app/clientes/cliente.ts","webpack:///src/app/clientes/clientes-form/clientes-form.component.ts","webpack:///src/app/clientes/clientes-form/clientes-form.component.html","webpack:///src/app/clientes/clientes-lista/clientes-lista.component.ts","webpack:///src/app/clientes/clientes-lista/clientes-lista.component.html","webpack:///src/app/clientes/clientes-routing.module.ts","webpack:///src/app/clientes/clientes.module.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/layout/layout.component.ts","webpack:///src/app/layout/layout.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/usuario.ts","webpack:///src/app/servico-prestado.service.ts","webpack:///src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.ts","webpack:///src/app/servico-prestado/servico-prestado-form/servico-prestado-form.component.html","webpack:///src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.ts","webpack:///src/app/servico-prestado/servico-prestado-lista/servico-prestado-lista.component.html","webpack:///src/app/servico-prestado/servico-prestado-routing.module.ts","webpack:///src/app/servico-prestado/servico-prestado.module.ts","webpack:///src/app/servico-prestado/servicoPrestado.ts","webpack:///src/app/template/navbar/navbar.component.ts","webpack:///src/app/template/navbar/navbar.component.html","webpack:///src/app/template/sidebar/sidebar.component.ts","webpack:///src/app/template/sidebar/sidebar.component.html","webpack:///src/app/template/template.module.ts","webpack:///src/app/token.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","children","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthGuard","authService","router","next","state","authenticated","isAuthenticated","navigate","providedIn","AuthService","http","apiURL","apiURLBase","tokenURL","obterTokenUrl","clientID","clientId","clientSecret","jwtHelper","tokenString","localStorage","getItem","token","JSON","parse","access_token","removeItem","obterToken","is","isTokenExpired","usuario","post","username","password","params","set","headers","btoa","toString","ClientesService","cliente","put","get","Cliente","ClientesFormComponent","service","activatedRoute","success","subscribe","urlParams","getClienteById","response","errorResponse","atualizar","errors","salvar","error","onSubmit","voltarParaListagem","ClientesListaComponent","clientes","getClientes","resposta","clienteSelecionado","deletar","mensagemSucesso","ngOnInit","erro","mensagemErro","novoCadastro","deletarCliente","ClientesRoutingModule","forChild","ClientesModule","HomeComponent","LayoutComponent","$","window","location","href","each","addClass","on","preventDefault","toggleClass","LoginComponent","tentarLogar","stringify","setItem","event","cadastrando","preparaCadastrar","Usuario","ServicoPrestadoService","servicoPrestado","nome","mes","httpParams","url","ServicoPrestadoFormComponent","clienteService","servico","ServicoPrestadoListaComponent","meses","buscar","lista","length","message","consultar","ServicoPrestadoRoutingModule","ServicoPrestadoModule","ServicoPrestado","NavbarComponent","SidebarComponent","usuarioLogado","decodeToken","user_name","encerrarSessao","logout","TemplateModule","TokenInterceptor","request","endsWith","jwt","clone","setHeaders","Authorization","handle","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LayoutComponent } from './layout/layout.component';\r\nimport { AuthGuard } from './auth.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: 'login', component: LoginComponent },\r\n  { path: '', component: LayoutComponent, children: [\r\n    { path : 'home', component: HomeComponent , canActivate: [AuthGuard]},\r\n    { path : '', redirectTo : '/home', pathMatch : 'full'}\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {useHash: true})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'clientes-app';\r\n\r\n \r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\nimport { FormsModule } from '@angular/forms'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { TemplateModule } from './template/template.module';\r\nimport { HomeComponent } from './home/home.component'\r\nimport { ClientesModule } from './clientes/clientes.module';\r\nimport { ClientesService } from './clientes.service'\r\nimport { ServicoPrestadoModule } from './servico-prestado/servico-prestado.module'\r\nimport { ServicoPrestadoService } from './servico-prestado.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { LayoutComponent } from './layout/layout.component'\r\nimport { AuthService } from './auth.service';\r\nimport { TokenInterceptor } from './token.interceptor';\r\nimport { JwtModule, JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    LayoutComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    TemplateModule,\r\n    ClientesModule,\r\n    ServicoPrestadoModule\r\n  ],\r\n  providers: [\r\n    ClientesService,\r\n    ServicoPrestadoService,\r\n    AuthService,\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: TokenInterceptor,\r\n      multi: true\r\n    }\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ){}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      \n    const authenticated = this.authService.isAuthenticated();\n    if(authenticated){\n      return true;\n    }else{\n      this.router.navigate(['/login'])\n      return false;\n    }\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Usuario } from './login/usuario';\nimport { Observable } from 'rxjs';\n\nimport { JwtHelperService } from '@auth0/angular-jwt'\n\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  apiURL: string = environment.apiURLBase + \"/api/usuarios\"\n  tokenURL: string = environment.apiURLBase + environment.obterTokenUrl\n  clientID: string = environment.clientId;\n  clientSecret: string = environment.clientSecret;\n  jwtHelper: JwtHelperService = new JwtHelperService();\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  obterToken(){\n    const tokenString = localStorage.getItem('access_token')\n    if(tokenString){\n      const token = JSON.parse(tokenString).access_token\n      return token;\n    }\n    return null;\n  }\n\n  encerrarSessao(){\n    localStorage.removeItem('access_token');\n  }\n\n  public isAuthenticated() : boolean {\n    const token = this.obterToken();\n    if(token){\n      const is = this.jwtHelper.isTokenExpired(token);\n      return !is;\n    }\n    return false;\n  }\n\n  getUsuarioLogado(){\n    const tokenString = localStorage.getItem('access_token')\n    if(tokenString){\n      return JSON.parse(tokenString);\n    }\n  }\n\n  salvar(usuario: Usuario) : Observable<any> {\n    return this.http.post<any>(this.apiURL, usuario);\n  }\n\n  tentarLogar( username: string, password: string ) : Observable<any> {\n    const params = new HttpParams()\n                        .set('username', username)\n                        .set('password', password)\n                        .set('grant_type', 'password')\n\n    const headers = {\n      'Authorization': 'Basic ' + btoa(`${this.clientID}:${this.clientSecret}`),\n      'Content-Type': 'application/x-www-form-urlencoded'\n    }\n    \n    return this.http.post( this.tokenURL, params.toString(), { headers });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\n\nimport { Cliente } from './clientes/cliente';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientesService {\n\n  apiURL: string = environment.apiURLBase + '/api/clientes';\n\n  constructor( private http: HttpClient ) {}\n\n  salvar( cliente: Cliente ) : Observable<Cliente> {\n    return this.http.post<Cliente>( `${this.apiURL}` , cliente);\n  }\n\n  atualizar( cliente: Cliente ) : Observable<any> {\n    return this.http.put<Cliente>(`${this.apiURL}/${cliente.id}` , cliente);\n  }\n\n  getClientes() : Observable<Cliente[]> {\n    return this.http.get<Cliente[]>(this.apiURL);\n  }\n  \n  getClienteById(id: number) : Observable<Cliente> {\n    return this.http.get<any>(`${this.apiURL}/${id}`);\n  }\n\n  deletar(cliente: Cliente) : Observable<any> {\n    return this.http.delete<any>(`${this.apiURL}/${cliente.id}`);\n  }\n\n}\n","export class Cliente {\r\n    id: number;\r\n    nome: string;\r\n    cpf: string;\r\n    dataCadastro: string;\r\n}","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router'\n\nimport { Cliente } from '../cliente'\nimport { ClientesService } from '../../clientes.service'\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-clientes-form',\n  templateUrl: './clientes-form.component.html',\n  styleUrls: ['./clientes-form.component.css']\n})\nexport class ClientesFormComponent implements OnInit {\n\n  cliente: Cliente;\n  success: boolean = false;\n  errors: String[];\n  id: number;\n\n  constructor( \n      private service: ClientesService ,\n      private router: Router,\n      private activatedRoute : ActivatedRoute\n      ) {\n    this.cliente = new Cliente();\n  }\n\n  ngOnInit(): void {\n    let params : Observable<Params> = this.activatedRoute.params\n    params.subscribe( urlParams => {\n        this.id = urlParams['id'];\n        if(this.id){\n          this.service\n            .getClienteById(this.id)\n            .subscribe( \n              response => this.cliente = response ,\n              errorResponse => this.cliente = new Cliente()\n            )\n        }\n    })\n  }\n\n  voltarParaListagem(){\n    this.router.navigate(['/clientes/lista'])\n  }\n\n  onSubmit(){\n    if(this.id){\n\n      this.service\n        .atualizar(this.cliente)\n        .subscribe(response => {\n            this.success = true;\n            this.errors = null;\n        }, errorResponse => {\n          this.errors = ['Erro ao atualizar o cliente.']\n        })\n\n\n    }else{\n\n      this.service\n        .salvar(this.cliente)\n          .subscribe( response => {\n            this.success = true;\n            this.errors = null;\n            this.cliente = response;\n          } , errorResponse => {\n            this.success = false;\n            this.errors = errorResponse.error.errors;\n          })\n\n    }\n\n  }\n\n}\n","<h1 class=\"mt-4\">Clientes</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">{{ cliente.id ? 'Edição' : 'Cadastro' }}</li>\n</ol>\n<div class=\"container\">\n    <form #clienteForm=\"ngForm\" (ngSubmit)=\"onSubmit()\" >\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\n                    Cliente salvo/atualizado com sucesso!    \n                </div>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\n                    {{ erro  }}    \n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"cliente.id\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>ID:</label>\n                    <input type=\"text\" [ngModel]=\"cliente.id\" name=\"id\" class=\"form-control\" disabled=\"true\" />\n                </div>\n            </div>\n\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data Cadastro:</label>\n                    <input type=\"text\" class=\"form-control\" name=\"dataCadastro\"\n                           [ngModel]=\"cliente.dataCadastro\" disabled=\"true\"  />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Nome: *</label>\n                    <input type=\"text\" class=\"form-control\" \n                           [(ngModel)]=\"cliente.nome\" name=\"nome\"   />\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>CPF: *</label>\n                    <input type=\"text\" class=\"form-control\" \n                            [(ngModel)]=\"cliente.cpf\" name=\"cpf\"  />\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-success\" *ngIf=\"!cliente.id\">\n                    <i class=\"fa fa-save\" ></i> Salvar\n                </button>\n\n                <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"cliente.id\">\n                    <i class=\"fa fa-sync-alt\" ></i> Atualizar\n                </button>\n\n                <button type=\"button\" class=\"btn btn-danger ml-1\" (click)=\"voltarParaListagem()\">\n                    <i class=\"fa fa-arrow-alt-circle-left\" ></i> Voltar\n                </button>\n            </div>\n     \n        </div>\n    </form>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router'\r\n\r\nimport { Cliente } from '../cliente';\r\nimport { ClientesService } from '../../clientes.service'\r\n\r\n@Component({\r\n  selector: 'app-clientes-lista',\r\n  templateUrl: './clientes-lista.component.html',\r\n  styleUrls: ['./clientes-lista.component.css']\r\n})\r\nexport class ClientesListaComponent implements OnInit {\r\n\r\n  clientes: Cliente[] = [];\r\n  clienteSelecionado: Cliente;\r\n  mensagemSucesso: string;\r\n  mensagemErro: string;\r\n\r\n  constructor(\r\n    private service: ClientesService, \r\n    private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.service\r\n      .getClientes()\r\n      .subscribe( resposta => this.clientes = resposta );\r\n  }\r\n\r\n  novoCadastro(){\r\n    this.router.navigate(['/clientes/form'])\r\n  }\r\n\r\n  preparaDelecao(cliente: Cliente){\r\n    this.clienteSelecionado = cliente;\r\n  }\r\n\r\n  deletarCliente(){\r\n    this.service\r\n      .deletar(this.clienteSelecionado)\r\n      .subscribe( \r\n        response => {\r\n          this.mensagemSucesso = 'Cliente deletado com sucesso!'\r\n          this.ngOnInit();\r\n        },\r\n        erro => this.mensagemErro = 'Ocorreu um erro ao deletar o cliente.'  \r\n      )\r\n  }\r\n}\r\n","<h1 class=\"mt-4\">Clientes</h1>\r\n<ol class=\"breadcrumb mb-4\">\r\n    <li class=\"breadcrumb-item active\">Consulta</li>\r\n</ol>\r\n<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n\r\n            <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"mensagemSucesso\">\r\n                {{ mensagemSucesso }}  \r\n            </div>\r\n\r\n            <div class=\"alert alert-danger\" role=\"alert\" *ngIf=\"mensagemErro\">\r\n                {{ mensagemErro  }}    \r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n            <button class=\"btn btn-warning\" (click)=\"novoCadastro()\" >\r\n                <i class=\"fa fa-plus\"></i> Novo\r\n            </button>\r\n        </div>\r\n    </div>\r\n    <br />\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <table class=\"table table-condensed table-hover\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Nome</th>\r\n                        <th>CPF</th>\r\n                        <th>Data Cadastro</th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let cliente of clientes\">\r\n                        <td>{{ cliente.id }}</td>\r\n                        <td>{{ cliente.nome }}</td>\r\n                        <td>{{ cliente.cpf }}</td>\r\n                        <td>{{ cliente.dataCadastro }}</td>\r\n                        <td>\r\n                            <button class=\"btn btn-primary\" \r\n                                    routerLink=\"/clientes/form/{{ cliente.id }}\">\r\n                                <i class=\"fa fa-edit\"></i>\r\n                            </button>\r\n\r\n                            <button class=\"btn btn-danger\" (click)=\"preparaDelecao(cliente)\" \r\n                                    data-toggle=\"modal\" data-target=\"#modalDelecao\">\r\n                                <i class=\"fa fa-trash\"></i>\r\n                            </button>\r\n\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n\r\n    <div id=\"modalDelecao\" class=\"modal fade\" role=\"dialog\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n                <div class=\"modal-header\">\r\n                    <h4>Confirmação</h4>\r\n                </div>\r\n\r\n                <div class=\"modal-body\" *ngIf=\"clienteSelecionado\">\r\n                    Confirma a deleção do(a) Cliente {{ clienteSelecionado.nome }}?\r\n                </div>\r\n\r\n                <div class=\"modal-footer\">\r\n                    <button class=\"btn btn-success\" (click)=\"deletarCliente()\"  \r\n                            data-dismiss=\"modal\">Confirmar</button>\r\n                    <button class=\"btn btn-default\" data-dismiss=\"modal\">Cancelar</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component'\r\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path : 'clientes' , canActivate: [AuthGuard], component: LayoutComponent, children: [\r\n    \r\n    { path: 'form' , component: ClientesFormComponent },\r\n    { path: 'form/:id' , component: ClientesFormComponent },\r\n    { path: 'lista', component: ClientesListaComponent },\r\n    { path: '', redirectTo : '/clientes/lista', pathMatch: 'full' }\r\n\r\n  ]}\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ClientesRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\n\nimport { ClientesRoutingModule } from './clientes-routing.module';\nimport { ClientesFormComponent } from './clientes-form/clientes-form.component';\nimport { ClientesListaComponent } from './clientes-lista/clientes-lista.component';\n\n@NgModule({\n  declarations: [\n    ClientesFormComponent,\n    ClientesListaComponent\n  ],\n  imports: [\n    CommonModule,\n    ClientesRoutingModule,\n    FormsModule\n  ], exports: [\n    ClientesFormComponent,\n    ClientesListaComponent\n  ]\n})\nexport class ClientesModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<h1 class=\"mt-4\">Home</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrumb-item active\">Bem vindo</li>\n</ol>","import { Component, AfterViewInit } from '@angular/core';\n\nimport jQuery from 'jquery'\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements AfterViewInit {\n\n  constructor() { }\n\n  ngAfterViewInit(){\n    (function($) {\n        \"use strict\";\n    \n        // Add active state to sidbar nav links\n        var path = window.location.href; // because the 'href' property of the DOM element is the absolute path\n            $(\"#layoutSidenav_nav .sb-sidenav a.nav-link\").each(function() {\n                if (this.href === path) {\n                    $(this).addClass(\"active\");\n                }\n            });\n    \n        // Toggle the side navigation\n        $(\"#sidebarToggle\").on(\"click\", function(e) {\n            e.preventDefault();\n            $(\"body\").toggleClass(\"sb-sidenav-toggled\");\n        });\n    })(jQuery);\n  }\n\n}\n","<app-navbar></app-navbar>\n<div id=\"layoutSidenav\">\n  <app-sidebar></app-sidebar> \n  <div id=\"layoutSidenav_content\">\n    <main>\n      <div class=\"container-fluid\">\n        <router-outlet></router-outlet>\n      </div>\n      <footer class=\"py-4 bg-light mt-auto\">\n        <div class=\"container-fluid\">\n            <div class=\"d-flex align-items-center justify-content-between small\">\n                <div class=\"text-muted\">Copyright &copy; Meus Clientes 2020</div>\n                <div>\n                    <a href=\"#\">Privacy Policy</a>\n                    &middot;\n                    <a href=\"#\">Terms &amp; Conditions</a>\n                </div>\n            </div>\n        </div>\n    </footer>\n    </main>\n  </div>\n</div>","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Usuario } from './usuario'\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent  {\n\n  username: string;\n  password: string;\n  cadastrando: boolean;\n  mensagemSucesso: string;\n  errors: String[];\n\n  constructor(\n    private router: Router,\n    private authService: AuthService\n  ) { }\n\n  onSubmit(){\n    this.authService\n          .tentarLogar(this.username, this.password)\n          .subscribe(response => {\n            const access_token = JSON.stringify(response);\n            localStorage.setItem('access_token', access_token)\n            this.router.navigate(['/home'])\n          }, errorResponse => {\n            this.errors = ['Usuário e/ou senha incorreto(s).']\n          })\n\n  }\n\n  preparaCadastrar(event){\n    event.preventDefault();\n    this.cadastrando = true;\n  }\n\n  cancelaCadastro(){\n    this.cadastrando = false;\n  }\n\n  cadastrar(){\n    const usuario: Usuario = new Usuario();\n    usuario.username = this.username;\n    usuario.password = this.password;\n    this.authService\n        .salvar(usuario)\n        .subscribe( response => {\n            this.mensagemSucesso = \"Cadastro realizado com sucesso! Efetue o login.\";\n            this.cadastrando = false;\n            this.username = '';\n            this.password = '';\n            this.errors = []\n        }, errorResponse => {\n            this.mensagemSucesso = null;\n            this.errors = errorResponse.error.errors;\n        })\n  }\n\n}\n","<div class=\"bg-primary\" >\n    <div id=\"layoutAuthentication\">\n        <div id=\"layoutAuthentication_content\">\n            <main>\n                <div class=\"container\">\n                    <div class=\"row justify-content-center\">\n                        <div class=\"col-lg-5\">\n                            <div class=\"card shadow-lg border-0 rounded-lg mt-5\">\n                                <div class=\"card-header\">\n                                    <h3 class=\"text-center font-weight-light my-4\">\n                                        {{ cadastrando ? 'Cadastro de Novo Usuário' : 'Entrar' }}\n                                    </h3>\n                                </div>\n                                <div class=\"card-body\">\n                                    <div class=\"alert alert-success\" *ngIf=\"mensagemSucesso\">\n                                        {{ mensagemSucesso }}\n                                    </div>\n\n                                    <div class=\"alert alert-danger\" *ngFor=\"let erro of errors\">\n                                    {{ erro }}\n                                    </div>\n\n                                    <form #loginForm=\"ngForm\" (submit)=\"onSubmit();\">\n                                        <div class=\"form-group\">\n                                            <label class=\"small mb-1\">Login</label>\n                                            <input type=\"text\" name=\"username\"\n                                                [(ngModel)]=\"username\" autocomplete=\"off\"\n                                                class=\"form-control py-4\"\n                                                placeholder=\"Digite seu login\" />\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label class=\"small mb-1\">Senha</label>\n                                            <input type=\"password\" name=\"password\"\n                                                [(ngModel)]=\"password\"\n                                                class=\"form-control py-4\"\n                                                placeholder=\"Digite sua Senha\" />\n                                        </div>\n\n                                        <div class=\"form-group align-items-center justify-content-between mt-4 mb-0\">\n                                            <button type=\"submit\" class=\"btn btn-primary\" *ngIf=\"!cadastrando\">\n                                                Enviar\n                                            </button>\n\n                                            <button type=\"button\" class=\"btn btn-success\" \n                                                    (click)=\"cadastrar()\"\n                                                    *ngIf=\"cadastrando\">\n                                                Cadastrar\n                                            </button>\n\n                                            <button type=\"button\" (click)=\"cancelaCadastro()\"\n                                                    class=\"btn btn-danger ml-1\" *ngIf=\"cadastrando\">\n                                                Cancelar\n                                            </button>\n                                        </div>\n                                    </form>\n                                </div>\n\n                                <div class=\"card-footer text-center\">\n                                    <div class=\"small\">\n                                        <a href=\"#\" (click)=\"preparaCadastrar($event)\" >\n                                            Não possui Usuário? Cadastre-se!\n                                        </a>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </main>\n        </div>\n    </div>\n</div>\n","export class Usuario {\r\n    username: string;\r\n    password: string;\r\n}","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { ServicoPrestado } from './servico-prestado/servicoPrestado';\nimport { Observable } from 'rxjs';\nimport { environment } from '../environments/environment'\nimport { ServicoPrestadoBusca } from './servico-prestado/servico-prestado-lista/servicoPrestadoBusca';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServicoPrestadoService {\n\n  apiURL: string = environment.apiURLBase + \"/api/servicos-prestados\"\n\n  constructor(private http: HttpClient) { }\n\n  salvar(servicoPrestado: ServicoPrestado) : Observable<ServicoPrestado>{\n    return this.http.post<ServicoPrestado>(this.apiURL, servicoPrestado);\n  }\n\n  buscar(nome: string, mes: number) : Observable<ServicoPrestadoBusca[]>{\n\n    const httpParams = new HttpParams()\n      .set(\"nome\", nome)\n      .set(\"mes\", mes ?  mes.toString() : '');\n\n    const url = this.apiURL + \"?\" + httpParams.toString();\n    return this.http.get<any>(url);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Cliente } from '../../clientes/cliente';\nimport { ClientesService } from '../../clientes.service'\nimport { ServicoPrestado } from '../servicoPrestado';\nimport { ServicoPrestadoService } from '../../servico-prestado.service'\n\n@Component({\n  selector: 'app-servico-prestado-form',\n  templateUrl: './servico-prestado-form.component.html',\n  styleUrls: ['./servico-prestado-form.component.css']\n})\nexport class ServicoPrestadoFormComponent implements OnInit {\n\n  clientes: Cliente[] = []\n  servico: ServicoPrestado;\n  success: boolean = false;\n  errors: String[];\n\n  constructor(\n    private clienteService: ClientesService,\n    private service: ServicoPrestadoService\n  ) { \n    this.servico = new ServicoPrestado();\n  }\n\n  ngOnInit(): void {\n    this.clienteService\n      .getClientes()\n      .subscribe( response => this.clientes = response );\n  }\n\n  onSubmit(){\n    this.service\n      .salvar(this.servico)\n      .subscribe( response => {\n        this.success = true;\n        this.errors = null;\n        this.servico = new ServicoPrestado();\n      } , errorResponse => {\n        this.success = false;\n        this.errors = errorResponse.error.errors;\n      })\n  }\n\n}\n","<h1 class=\"mt-4\">Serviço Prestado</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrum-bitem active\">Novo</li>\n</ol>\n<div class=\"container\">\n    <form #form=\"ngForm\" (submit)=\"onSubmit()\" >\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"alert alert-success\" role=\"alert\" *ngIf=\"success == true\">\n                    Serviço Prestado salvo com sucesso!    \n                </div>\n                <div class=\"alert alert-danger\" role=\"alert\" *ngFor=\"let erro of errors\">\n                    {{ erro  }}    \n                </div>\n            </div>\n        </div>\n        \n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Cliente: </label>\n                    <select class=\"form-control\" \n                            [ngModelOptions]=\"{standalone: true}\"\n                            [(ngModel)]=\"servico.idCliente\">\n                        <option value=\"\">Selecione...</option>\n                        <option *ngFor=\"let cliente of clientes\" \n                                [ngValue]=\"cliente.id\">\n                            {{ cliente.nome }}\n                        </option>\n                    </select>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-12\">\n                <div class=\"form-group\">\n                    <label>Descrição:</label>\n                    <input class=\"form-control\" \n                            [(ngModel)]=\"servico.descricao\" type=\"text\" \n                            name=\"descricao\" id=\"inputDescricao\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Data:</label>\n                    <input class=\"form-control\" \n                            [(ngModel)]=\"servico.data\" type=\"text\" \n                            name=\"data\" id=\"inputData\">\n                </div>\n            </div>\n            <div class=\"col-md-6\">\n                <div class=\"form-group\">\n                    <label>Preço:</label>\n                    <input class=\"form-control\" \n                            [(ngModel)]=\"servico.preco\" type=\"text\" \n                            name=\"preco\" id=\"inputPreco\">\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-md-3\">\n                <button type=\"submit\" class=\"btn btn-success\">\n                    <i class=\"fa fa-save\"></i>\n                    Salvar\n                </button>\n\n                <button type=\"button\" routerLink=\"/servicos-prestados/lista\" \n                        class=\"btn btn-danger ml-1\" >\n                    <i class=\"fa fa-arrow-alt-circle-left\" ></i> Voltar\n                </button>\n            </div>\n        </div>\n\n    </form>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ServicoPrestadoBusca } from './servicoPrestadoBusca';\nimport { ServicoPrestadoService } from '../../servico-prestado.service'\n\n@Component({\n  selector: 'app-servico-prestado-lista',\n  templateUrl: './servico-prestado-lista.component.html',\n  styleUrls: ['./servico-prestado-lista.component.css']\n})\nexport class ServicoPrestadoListaComponent implements OnInit {\n\n  nome: string;\n  mes: number;\n  meses: number[];\n  lista: ServicoPrestadoBusca[];\n  message: string;\n\n  constructor(\n    private service: ServicoPrestadoService\n  ) { \n    this.meses = [1,2,3,4,5,6,7,8,9,10,11,12];\n  }\n\n  ngOnInit(): void {\n  }\n\n  consultar(){\n    this.service\n      .buscar(this.nome, this.mes)\n      .subscribe(response => {\n        this.lista = response;\n        if( this.lista.length <= 0 ){\n          this.message = \"Nenhum Registro encontrado.\";\n        }else{\n          this.message = null;\n        }\n      });\n  }\n}\n","<h1 class=\"mt-4\">Serviço Prestado</h1>\n<ol class=\"breadcrumb mb-4\">\n    <li class=\"breadcrum-bitem active\">Consulta</li>\n</ol>\n<div class=\"container\">\n    <form #consultaForm=\"ngForm\" (submit)=\"consultar()\">\n        <div class=\"row\">\n            <div class=\"col-md-6\">\n                <label for=\"inputNome\">Nome Cliente:</label>\n                <input type=\"text\" [(ngModel)]=\"nome\" \n                       name=\"nome\" class=\"form-control\"\n                       id=\"inputNome\">\n            </div>\n\n            <div class=\"col-md-6\">\n                <label for=\"inputMes\">Mês:</label>\n                <select [(ngModel)]=\"mes\" class=\"form-control\" name=\"mes\">\n                    <option value=\"\">Selecione...</option>\n                    <option *ngFor=\"let mes of meses\" [value]=\"mes\">\n                        {{ mes }}\n                    </option>\n                </select>\n            </div>\n        </div>\n\n        <br />\n\n        <div class=\"row\">\n            <div class=\"col-md-4\">\n                <button type=\"submit\" class=\"btn btn-primary\">\n                    <i class=\"fa fa-search\"></i> Consultar\n                </button>\n\n                <button type=\"button\" \n                        routerLink=\"/servicos-prestados/form\"\n                        class=\"btn btn-warning ml-1\">\n                    <i class=\"fa fa-plus\"></i> Novo\n                </button>\n            </div>\n        </div>\n    </form>\n\n    <br />\n    <div class=\"row\">\n        <div class=\"alert alert-warning\" role=\"alert\" *ngIf=\"message\">\n            {{ message }}   \n        </div>\n        <div class=\"col-md-12\">\n            <table class=\"table\">\n                <thead>\n                    <tr>\n                        <th>Cliente</th>\n                        <th>Descrição</th>\n                        <th>Preço</th>\n                        <th>Data</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let s of lista\" >\n                        <td>{{ s.cliente.nome }} </td>\n                        <td>{{ s.descricao }} </td>\n                        <td>{{ s.valor }} </td>\n                        <td>{{ s.data }} </td>\n                    </tr>\n                </tbody>\n            </table>\n            \n        </div>\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\r\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\r\nimport { LayoutComponent } from '../layout/layout.component';\r\nimport { AuthGuard } from '../auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'servicos-prestados', canActivate: [AuthGuard], component: LayoutComponent, children: [\r\n    \r\n    { path: 'form', component: ServicoPrestadoFormComponent },\r\n    { path: 'lista', component: ServicoPrestadoListaComponent },\r\n    { path: '', redirectTo: '/servicos-prestados/lista', pathMatch: 'full' }\r\n\r\n  ]}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ServicoPrestadoRoutingModule { }\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms'\n\nimport { ServicoPrestadoRoutingModule } from './servico-prestado-routing.module';\nimport { ServicoPrestadoFormComponent } from './servico-prestado-form/servico-prestado-form.component';\nimport { ServicoPrestadoListaComponent } from './servico-prestado-lista/servico-prestado-lista.component';\nimport { RouterModule } from '@angular/router';\n\n\n@NgModule({\n  declarations: [\n    ServicoPrestadoFormComponent, \n    ServicoPrestadoListaComponent\n  ],\n  imports: [\n    \n    CommonModule,\n    ServicoPrestadoRoutingModule,\n    FormsModule,\n    RouterModule\n\n  ], exports : [\n    ServicoPrestadoFormComponent, \n    ServicoPrestadoListaComponent\n  ]\n})\nexport class ServicoPrestadoModule { }\n","export class ServicoPrestado {\r\n    descricao:string;\r\n    preco:string;\r\n    data:string;\r\n    idCliente:number;\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"sb-topnav navbar navbar-expand navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\" href=\"#\">Meus Clientes</a>\r\n    <button class=\"btn btn-link btn-sm order-1 order-lg-0\" \r\n            id=\"sidebarToggle\" href=\"#\">\r\n        <i class=\"fas fa-bars\"></i>\r\n    </button>            \r\n</nav>","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth.service';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  usuarioLogado: any;\n  jwtHelper: JwtHelperService = new JwtHelperService();\n\n  constructor(\n    private authService: AuthService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    const token = this.authService.obterToken();\n    if(token){\n      this.usuarioLogado = this.jwtHelper.decodeToken(token).user_name\n    }\n  }\n\n  logout(){\n    this.authService.encerrarSessao();\n    this.router.navigate(['/login'])\n  }\n\n}\n","<div id=\"layoutSidenav_nav\">\r\n    <nav class=\"sb-sidenav accordion sb-sidenav-dark\" id=\"sidenavAccordion\">\r\n        <div class=\"sb-sidenav-menu\">\r\n            <div class=\"nav\">\r\n                <div class=\"sb-sidenav-menu-heading\">Sistema</div>\r\n                <a class=\"nav-link\" routerLink=\"/home\">\r\n                    <div class=\"sb-nav-link-icon\">\r\n                        <i class=\"fas fa-tachometer-alt\"></i>\r\n                    </div>\r\n                    Home\r\n                </a>\r\n                <div class=\"sb-sidenav-menu-heading\">Cadastros</div>\r\n                <a class=\"nav-link collapsed\" routerLink=\"/clientes\" \r\n                    data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \r\n                    aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\r\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-columns\"></i></div>\r\n                    Clientes\r\n                </a>\r\n\r\n                <a class=\"nav-link collapsed\" routerLink=\"/servicos-prestados\" \r\n                    data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \r\n                    aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\r\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-address-card\"></i></div>\r\n                    Serviços Prestados\r\n                </a>\r\n                <div class=\"sb-sidenav-menu-heading\">Logout</div>\r\n                <a class=\"nav-link collapsed\" (click)=\"logout()\" href=\"#\"\r\n                    data-toggle=\"collapse\" data-target=\"#collapseLayouts\" \r\n                    aria-expanded=\"false\" aria-controls=\"collapseLayouts\"\r\n                    ><div class=\"sb-nav-link-icon\"><i class=\"fas fa-sign-out-alt\"></i></div>\r\n                    Sair\r\n                </a>\r\n            </div>\r\n        </div>\r\n        <div class=\"sb-sidenav-footer\">\r\n            <div class=\"small\">Logado como:</div>\r\n            {{ usuarioLogado }}\r\n        </div>\r\n    </nav>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { SidebarComponent } from './sidebar/sidebar.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports: [\r\n    NavbarComponent,\r\n    SidebarComponent\r\n  ]\r\n})\r\nexport class TemplateModule { }\r\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class TokenInterceptor implements HttpInterceptor {\n\n  constructor() {}\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    const tokenString = localStorage.getItem('access_token');\n\n    const url =  request.url;\n\n    if( tokenString && !url.endsWith('/oauth/token') ){\n      const token = JSON.parse(tokenString);\n      const jwt = token.access_token;\n      request = request.clone({\n        setHeaders : {\n          Authorization: 'Bearer ' + jwt\n        }\n      })\n    }\n\n    return next.handle(request);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiURLBase: 'http://localhost:8080',\r\n  clientId: 'my-angular-app',\r\n  clientSecret: '@321',\r\n  obterTokenUrl: '/oauth/token'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}